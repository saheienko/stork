/*
Copyright 2018 Openstorage.org

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/libopenstorage/stork/pkg/apis/stork/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VolumeImportLister helps list VolumeImports.
type VolumeImportLister interface {
	// List lists all VolumeImports in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VolumeImport, err error)
	// VolumeImports returns an object that can list and get VolumeImports.
	VolumeImports(namespace string) VolumeImportNamespaceLister
	VolumeImportListerExpansion
}

// volumeImportLister implements the VolumeImportLister interface.
type volumeImportLister struct {
	indexer cache.Indexer
}

// NewVolumeImportLister returns a new VolumeImportLister.
func NewVolumeImportLister(indexer cache.Indexer) VolumeImportLister {
	return &volumeImportLister{indexer: indexer}
}

// List lists all VolumeImports in the indexer.
func (s *volumeImportLister) List(selector labels.Selector) (ret []*v1alpha1.VolumeImport, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VolumeImport))
	})
	return ret, err
}

// VolumeImports returns an object that can list and get VolumeImports.
func (s *volumeImportLister) VolumeImports(namespace string) VolumeImportNamespaceLister {
	return volumeImportNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VolumeImportNamespaceLister helps list and get VolumeImports.
type VolumeImportNamespaceLister interface {
	// List lists all VolumeImports in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VolumeImport, err error)
	// Get retrieves the VolumeImport from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VolumeImport, error)
	VolumeImportNamespaceListerExpansion
}

// volumeImportNamespaceLister implements the VolumeImportNamespaceLister
// interface.
type volumeImportNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VolumeImports in the indexer for a given namespace.
func (s volumeImportNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VolumeImport, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VolumeImport))
	})
	return ret, err
}

// Get retrieves the VolumeImport from the indexer for a given namespace and name.
func (s volumeImportNamespaceLister) Get(name string) (*v1alpha1.VolumeImport, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("volumeimport"), name)
	}
	return obj.(*v1alpha1.VolumeImport), nil
}
